{"version":3,"file":"network-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n\n  constructor(chainId: number, url: string) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: unknown[] | object },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then(result => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch(error => callback(error, null))\n  }\n\n  public readonly request = async (method: string, params?: unknown[] | object): Promise<unknown> => {\n    const response = await fetch(this.url, {\n      method: 'POST',\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        id: 1,\n        method,\n        params\n      })\n    })\n    if (!response.ok) throw new RequestError(`${response.status}: ${response.statusText}`, -32000)\n    const body = await response.json()\n    if ('error' in body) {\n      throw new RequestError(body?.error?.message, body?.error?.code, body?.error?.data)\n    } else if ('result' in body) {\n      return body.result\n    } else {\n      throw new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, body)\n    }\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n}\n"],"names":["RequestError","message","code","data","Error","MiniRpcProvider","chainId","url","request","callback","method","params","then","result","jsonrpc","id","error","fetch","body","JSON","stringify","response","ok","status","statusText","json","parsed","URL","host","path","pathname","NetworkConnector","urls","defaultChainId","Object","keys","length","invariant","supportedChainIds","map","k","Number","currentChainId","providers","reduce","accumulator","activate","provider","account","getProvider","getChainId","getAccount","deactivate","AbstractConnector"],"mappings":"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"}