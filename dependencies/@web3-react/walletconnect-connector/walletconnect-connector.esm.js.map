{"version":3,"file":"walletconnect-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  public walletConnectProvider?: any\n\n  constructor(private readonly opts: IWalletConnectProviderOptions) {\n    super({ supportedChainIds: Object.keys(opts.rpc || {}).map(k => Number(k)) })\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.opts)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession(this.opts.chainId ? { chainId: this.opts.chainId } : undefined)\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    let account: string\n    account = await new Promise<string>((resolve, reject) => {\n      const userReject = () => {\n        // Erase the provider manually\n        this.walletConnectProvider = undefined\n        reject(new UserRejectedRequestError())\n      }\n\n      // Workaround to bubble up the error when user reject the connection\n      this.walletConnectProvider.wc.on('disconnect', () => {\n        // Check provider has not been enabled to prevent this event callback from being called in the future\n        if (!account) {\n          userReject()\n        }\n      })\n\n      this.walletConnectProvider\n        .enable()\n        .then((accounts: string[]) => resolve(accounts[0]))\n        .catch((error: Error): void => {\n          // TODO ideally this would be a better check\n          if (error.message === 'User closed modal') {\n            userReject()\n            return\n          }\n          reject(error)\n        })\n    }).catch(err => {\n      throw err\n    })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","WalletConnectConnector","opts","supportedChainIds","Object","keys","rpc","map","k","Number","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","undefined","activate","Promise","resolve","reject","userReject","wc","on","enable","then","error","err","provider","connected","createSession","emit","uri","m","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","AbstractConnector"],"mappings":"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"}